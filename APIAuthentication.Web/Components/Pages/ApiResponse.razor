@page "/api-response"
@using APIAuthentication.Authorization
@using APIAuthentication.Web.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization

@inject IAuthorizationService AuthorizationService
@inject ApiClient ApiClient
@inject NavigationManager Navigation
@attribute [Authorize(Policy = "admin")]

<PageTitle>Api Response</PageTitle>

<h1>Api Response</h1>

<p>This component demonstrates showing data loaded from a backend API service.</p>

@if (response == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>@response</p>
    <p>@isAuth</p>
}

@code {
    string? response;
    bool isAuth = false;

    [CascadingParameter]
    Task<AuthenticationState>? AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthState is null) { return; }

        var authState = await AuthState;
        var user = authState.User;

        response = await ApiClient.GetString();

        if ((await AuthorizationService.AuthorizeAsync(user, AuthorizationPolicies.IsAdmin())).Succeeded)
        {
            isAuth = true;
        }
    }
}
