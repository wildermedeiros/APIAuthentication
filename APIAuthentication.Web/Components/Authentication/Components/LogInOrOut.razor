@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <div class="nav-item px-3">
            <form action="authentication/logout" method="post">
                <AntiforgeryToken />
                <button type="submit" class="nav-link">
                    <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout @context.User.Identity?.Name
                </button>
            </form>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="nav-item px-3">
            <form action="authentication/login" method="get">
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <AntiforgeryToken />
                <button type="submit" class="nav-link">
                    <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                </button>
            </form>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
